//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Sitio_Privado.CircularizacionCustodia {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="tann_circularizacionSoap", Namespace="http://servicios.tanner.cl/circularizacion")]
    public partial class tann_circularizacion : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback cli_circularizacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback cli_archivo_circularizacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback cli_leer_circularizacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback cli_respuesta_circularizacionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public tann_circularizacion() {
            this.Url = global::Sitio_Privado.Properties.Settings.Default.Sitio_Privado_CircularizacionCustodia_tann_circularizacion;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event cli_circularizacionCompletedEventHandler cli_circularizacionCompleted;
        
        /// <remarks/>
        public event cli_archivo_circularizacionCompletedEventHandler cli_archivo_circularizacionCompleted;
        
        /// <remarks/>
        public event cli_leer_circularizacionCompletedEventHandler cli_leer_circularizacionCompleted;
        
        /// <remarks/>
        public event cli_respuesta_circularizacionCompletedEventHandler cli_respuesta_circularizacionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servicios.tanner.cl/circularizacion/cli_circularizacion", RequestNamespace="http://servicios.tanner.cl/circularizacion", ResponseNamespace="http://servicios.tanner.cl/circularizacion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool cli_circularizacion(int rut, string fecha) {
            object[] results = this.Invoke("cli_circularizacion", new object[] {
                        rut,
                        fecha});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void cli_circularizacionAsync(int rut, string fecha) {
            this.cli_circularizacionAsync(rut, fecha, null);
        }
        
        /// <remarks/>
        public void cli_circularizacionAsync(int rut, string fecha, object userState) {
            if ((this.cli_circularizacionOperationCompleted == null)) {
                this.cli_circularizacionOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncli_circularizacionOperationCompleted);
            }
            this.InvokeAsync("cli_circularizacion", new object[] {
                        rut,
                        fecha}, this.cli_circularizacionOperationCompleted, userState);
        }
        
        private void Oncli_circularizacionOperationCompleted(object arg) {
            if ((this.cli_circularizacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cli_circularizacionCompleted(this, new cli_circularizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servicios.tanner.cl/circularizacion/cli_archivo_circularizacion", RequestNamespace="http://servicios.tanner.cl/circularizacion", ResponseNamespace="http://servicios.tanner.cl/circularizacion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public archivocli cli_archivo_circularizacion(string rut, string fecha) {
            object[] results = this.Invoke("cli_archivo_circularizacion", new object[] {
                        rut,
                        fecha});
            return ((archivocli)(results[0]));
        }
        
        /// <remarks/>
        public void cli_archivo_circularizacionAsync(string rut, string fecha) {
            this.cli_archivo_circularizacionAsync(rut, fecha, null);
        }
        
        /// <remarks/>
        public void cli_archivo_circularizacionAsync(string rut, string fecha, object userState) {
            if ((this.cli_archivo_circularizacionOperationCompleted == null)) {
                this.cli_archivo_circularizacionOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncli_archivo_circularizacionOperationCompleted);
            }
            this.InvokeAsync("cli_archivo_circularizacion", new object[] {
                        rut,
                        fecha}, this.cli_archivo_circularizacionOperationCompleted, userState);
        }
        
        private void Oncli_archivo_circularizacionOperationCompleted(object arg) {
            if ((this.cli_archivo_circularizacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cli_archivo_circularizacionCompleted(this, new cli_archivo_circularizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servicios.tanner.cl/circularizacion/cli_leer_circularizacion", RequestNamespace="http://servicios.tanner.cl/circularizacion", ResponseNamespace="http://servicios.tanner.cl/circularizacion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool cli_leer_circularizacion(int rut, string fecha) {
            object[] results = this.Invoke("cli_leer_circularizacion", new object[] {
                        rut,
                        fecha});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void cli_leer_circularizacionAsync(int rut, string fecha) {
            this.cli_leer_circularizacionAsync(rut, fecha, null);
        }
        
        /// <remarks/>
        public void cli_leer_circularizacionAsync(int rut, string fecha, object userState) {
            if ((this.cli_leer_circularizacionOperationCompleted == null)) {
                this.cli_leer_circularizacionOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncli_leer_circularizacionOperationCompleted);
            }
            this.InvokeAsync("cli_leer_circularizacion", new object[] {
                        rut,
                        fecha}, this.cli_leer_circularizacionOperationCompleted, userState);
        }
        
        private void Oncli_leer_circularizacionOperationCompleted(object arg) {
            if ((this.cli_leer_circularizacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cli_leer_circularizacionCompleted(this, new cli_leer_circularizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://servicios.tanner.cl/circularizacion/cli_respuesta_circularizacion", RequestNamespace="http://servicios.tanner.cl/circularizacion", ResponseNamespace="http://servicios.tanner.cl/circularizacion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool cli_respuesta_circularizacion(int rut_cli, string fecha, string respuesta, string comentario) {
            object[] results = this.Invoke("cli_respuesta_circularizacion", new object[] {
                        rut_cli,
                        fecha,
                        respuesta,
                        comentario});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void cli_respuesta_circularizacionAsync(int rut_cli, string fecha, string respuesta, string comentario) {
            this.cli_respuesta_circularizacionAsync(rut_cli, fecha, respuesta, comentario, null);
        }
        
        /// <remarks/>
        public void cli_respuesta_circularizacionAsync(int rut_cli, string fecha, string respuesta, string comentario, object userState) {
            if ((this.cli_respuesta_circularizacionOperationCompleted == null)) {
                this.cli_respuesta_circularizacionOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncli_respuesta_circularizacionOperationCompleted);
            }
            this.InvokeAsync("cli_respuesta_circularizacion", new object[] {
                        rut_cli,
                        fecha,
                        respuesta,
                        comentario}, this.cli_respuesta_circularizacionOperationCompleted, userState);
        }
        
        private void Oncli_respuesta_circularizacionOperationCompleted(object arg) {
            if ((this.cli_respuesta_circularizacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cli_respuesta_circularizacionCompleted(this, new cli_respuesta_circularizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://servicios.tanner.cl/circularizacion")]
    public partial class archivocli {
        
        private string _cartolaField;
        
        private string _circulaField;
        
        /// <remarks/>
        public string _cartola {
            get {
                return this._cartolaField;
            }
            set {
                this._cartolaField = value;
            }
        }
        
        /// <remarks/>
        public string _circula {
            get {
                return this._circulaField;
            }
            set {
                this._circulaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void cli_circularizacionCompletedEventHandler(object sender, cli_circularizacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cli_circularizacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cli_circularizacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void cli_archivo_circularizacionCompletedEventHandler(object sender, cli_archivo_circularizacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cli_archivo_circularizacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cli_archivo_circularizacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public archivocli Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((archivocli)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void cli_leer_circularizacionCompletedEventHandler(object sender, cli_leer_circularizacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cli_leer_circularizacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cli_leer_circularizacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void cli_respuesta_circularizacionCompletedEventHandler(object sender, cli_respuesta_circularizacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cli_respuesta_circularizacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cli_respuesta_circularizacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591